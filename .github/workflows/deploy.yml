name: CD Workflow

# helpful reference: https://philo.dev/how-to-use-github-actions-build-matrix-to-deploy-artifacts-to-multiple-servers/

on:
  workflow_dispatch:
    branches:
      - main
    inputs:
      # full path to where to deploy to. For example: /home/trackaler/public_html
      basedir:
        description: 'Full path to deployment destination base directory'
        required: true
        default: ${{ secrets.DEPLOY_BASEDIR }}
  repository_dispatch:
    types: [deploy-to-stg]

jobs:
  deploy-assets:
    name: Deploy assets to STAGING Server
    runs-on: ubuntu-latest
    env:
      DEPLOY_BASEDIR: ${{ github.event.inputs.basedir ? github.event.inputs.basedir : secrets.DEPLOY_BASEDIR }}

    steps:
      - name: Set deployment env
        env:
          WORKFLOW_BASEDIR: ${{ github.event.inputs.basedir }}
          DEFAULT_BASEDIR: ${{ secrets.DEPLOY_BASEDIR }}
        run: echo "DEPLOY_BASEDIR=$(if [ -z $WORKFLOW_BASEDIR ]; echo $DEFAULT_BASEDIR; else echo $WORKFLOW_BASEDIR; fi)" >> $GITHUB_ENV

      - name: Fetch built assets from Artifacts
        uses: actions/download-artifact@v2
        with:
          name: app-assets

#      - name: create dummy tarball again
#        run: |
#          mkdir public
#          echo "foo" > public/foo.txt
#          echo "bar" > public/bar.txt
#          tar -czf app.tar.gz public
#          ls -l

      - name: Upload build assets
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEPLOY_SSH_HOST }}
          username: ${{ secrets.DEPLOY_SSH_USERNAME }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          passphrase: ${{ secrets.DEPLOY_SSH_PASSPHRASE }}
          overwrite: 1
          source: ${{ github.sha }}.tar.gz
          target: ${{ secrets.DEPLOY_WORKDIR }}

      - name: Deploy code
        uses: appleboy/ssh-action@master
        env:
          WORKDIR: ${{ secrets.DEPLOY_WORKDIR }}
          #BASEDIR: ${{ secrets.DEPLOY_BASEDIR }}
        with:
          host: ${{ secrets.DEPLOY_SSH_HOST }}
          username: ${{ secrets.DEPLOY_SSH_USERNAME }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          passphrase: ${{ secrets.DEPLOY_SSH_PASSPHRASE }}
          script_stop: true
          #envs: WORKDIR,BASEDIR
          envs: WORKDIR
          script: |
            cd ${WORKDIR} && rm -fr public
            #tar --recursive-unlink -xzf ${WORKDIR}/app.tar.gz -C ${WORKDIR}
            tar -xzf ${WORKDIR}/app.tar.gz -C ${WORKDIR}
            cd ${WORKDIR} && cp -r public ${DEPLOY_BASEDIR}/
            cd ${DEPLOY_BASEDIR} && git pull
            cd ${DEPLOY_BASEDIR} && php-8.0 ~/bin/composer-8.0 install
            cd ${DEPLOY_BASEDIR} && php-8.0 artisan config:cache
            cd ${DEPLOY_BASEDIR} && php-8.0 artisan route:cache
            cd ${DEPLOY_BASEDIR} && php-8.0 artisan view:cache

